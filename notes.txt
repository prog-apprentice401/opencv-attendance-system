Imports:
--------

import cv2
#optional:
import numpy


Video Capture:
--------------

cv2.VideoCapture (<cam port>) :	Function returns a video capture object

[video capture object continued as `cap`]
cap.read () :		reads a single frame, and returns it in a tupple:
			(success status, image as numpy array)

cap.release () : 	release the capture object


Image Operations:
-----------------

cv2.imshow (<win>, <image>) :
			Function to display image, often used to play video
cv2.split (<image>) : split an image into its three channels: R, G, B

cv2.imread (<path>, <IM color code>) :
			color code can be: IMREAD_COLOR, IMREAD_GRAYSCALE, IMREAD_UNCHANGED
			Returns a numpy array on which operations are performed

cv2.imwrite (<path>, <image>)
cv2.cvtColor (<frame>, <color conversion code>)

Patterns:
---------

# read, show, and save file
img = cv.imread('file', type)
cv.imshow('win', img)
cv.imwrite('file', img)

# interface
cv.namedWindow('win', type)
cv.waitKey(ms)
cv.destroyAllWindows()

# Video Capture
cap = cv.VideoCapture(0)
cap.isOpened()
cap.get(id)
cap.set(id, val)
ret, frame = cap.read()
cap.release()
img2 = cv.cvtColor(img, type)

# Drawing Functions
cv.line(img, p0, p1, col, d)
cv.circle(img, c0, r, col, d)
cv.ellipse(img, p0, (w, h), a
cv.polylines(img, [pts], True, col)

font = cv.FONT_
cv.putText(img, str, pos, font, size, col)
